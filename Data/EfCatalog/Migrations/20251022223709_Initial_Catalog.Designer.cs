// <auto-generated />
using System;
using BeerStore.Api.Data.EfCatalog;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeerStore.Api.Data.EfCatalog.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    [Migration("20251022223709_Initial_Catalog")]
    partial class Initial_Catalog
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BeerStore.Api.Models.Category", b =>
                {
                    b.Property<long>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = 1L,
                            Name = "Світле"
                        },
                        new
                        {
                            CategoryId = 2L,
                            Name = "Темне"
                        },
                        new
                        {
                            CategoryId = 3L,
                            Name = "IPA"
                        });
                });

            modelBuilder.Entity("BeerStore.Api.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("ProductId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("ProductId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 1L,
                            CreatedAt = new DateTime(2025, 10, 22, 22, 37, 8, 925, DateTimeKind.Utc).AddTicks(8222),
                            IsActive = true,
                            Name = "Lager 500ml",
                            Price = 2.50m,
                            Sku = "LAG-500",
                            StockQuantity = 100,
                            UpdatedAt = new DateTime(2025, 10, 22, 22, 37, 8, 925, DateTimeKind.Utc).AddTicks(8341)
                        },
                        new
                        {
                            ProductId = 2L,
                            CreatedAt = new DateTime(2025, 10, 22, 22, 37, 8, 925, DateTimeKind.Utc).AddTicks(8442),
                            IsActive = true,
                            Name = "IPA 330ml",
                            Price = 3.20m,
                            Sku = "IPA-330",
                            StockQuantity = 50,
                            UpdatedAt = new DateTime(2025, 10, 22, 22, 37, 8, 925, DateTimeKind.Utc).AddTicks(8443)
                        });
                });

            modelBuilder.Entity("BeerStore.Api.Models.ProductCategory", b =>
                {
                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 1L,
                            CategoryId = 1L
                        },
                        new
                        {
                            ProductId = 2L,
                            CategoryId = 3L
                        });
                });

            modelBuilder.Entity("BeerStore.Api.Models.ProductDetail", b =>
                {
                    b.Property<long>("DetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("DetailID"));

                    b.Property<decimal?>("AlcoholPercent")
                        .HasColumnType("decimal(4,2)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int?>("VolumeMl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(500);

                    b.HasKey("DetailID");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductDetails", (string)null);

                    b.HasData(
                        new
                        {
                            DetailID = 1L,
                            AlcoholPercent = 4.7m,
                            Country = "Україна",
                            Description = "Класичний лагер з м'яким смаком",
                            ProductId = 1L,
                            VolumeMl = 500
                        },
                        new
                        {
                            DetailID = 2L,
                            AlcoholPercent = 6.0m,
                            Country = "Україна",
                            Description = "Свіжий ароматний IPA з цитрусовими нотками",
                            ProductId = 2L,
                            VolumeMl = 330
                        });
                });

            modelBuilder.Entity("BeerStore.Api.Models.ProductImage", b =>
                {
                    b.Property<long>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("ImageId"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsMain")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages", (string)null);

                    b.HasData(
                        new
                        {
                            ImageId = 1L,
                            ImageUrl = "https://example.com/lager.jpg",
                            IsMain = true,
                            ProductId = 1L
                        },
                        new
                        {
                            ImageId = 2L,
                            ImageUrl = "https://example.com/ipa.jpg",
                            IsMain = true,
                            ProductId = 2L
                        });
                });

            modelBuilder.Entity("BeerStore.Api.Models.ProductCategory", b =>
                {
                    b.HasOne("BeerStore.Api.Models.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeerStore.Api.Models.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BeerStore.Api.Models.ProductDetail", b =>
                {
                    b.HasOne("BeerStore.Api.Models.Product", "Product")
                        .WithOne("Detail")
                        .HasForeignKey("BeerStore.Api.Models.ProductDetail", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BeerStore.Api.Models.ProductImage", b =>
                {
                    b.HasOne("BeerStore.Api.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BeerStore.Api.Models.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("BeerStore.Api.Models.Product", b =>
                {
                    b.Navigation("Detail");

                    b.Navigation("Images");

                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
